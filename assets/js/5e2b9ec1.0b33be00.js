"use strict";(self.webpackChunktsdoc_org=self.webpackChunktsdoc_org||[]).push([[107],{158:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>b});var r=n(6393);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=c(n),f=a,b=u["".concat(s,".").concat(f)]||u[f]||m[f]||l;return n?r.createElement(b,o(o({ref:t},p),{},{components:n})):r.createElement(b,o({ref:t},p))}));function b(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=f;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[u]="string"==typeof e?e:a,o[1]=i;for(var c=2;c<l;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},7824:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>b,frontMatter:()=>i,metadata:()=>c,toc:()=>u});var r=n(9122),a=n(2501),l=(n(6393),n(158)),o=["components"],i={title:"@label"},s=void 0,c={unversionedId:"pages/tags/label",id:"pages/tags/label",title:"@label",description:"|    |    |",source:"@site/docs/pages/tags/label.md",sourceDirName:"pages/tags",slug:"/pages/tags/label",permalink:"/pages/tags/label",draft:!1,editUrl:"https://github.com/microsoft/rushstack-websites/tree/main/websites/tsdoc.org/docs/pages/tags/label.md",tags:[],version:"current",frontMatter:{title:"@label"},sidebar:"docsSidebar",previous:{title:"@internal",permalink:"/pages/tags/internal"},next:{title:"@link",permalink:"/pages/tags/link"}},p={},u=[{value:"Usage",id:"usage",level:2},{value:"Example",id:"example",level:2}],m={toc:u},f="wrapper";function b(e){var t=e.components,n=(0,a.Z)(e,o);return(0,l.kt)(f,(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("table",null,(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Standardization:"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/pages/spec/standardization_groups"},"Core"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Syntax kind:"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/pages/spec/tag_kinds"},"Inline tag"))))),(0,l.kt)("h2",{id:"usage"},"Usage"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"{@label}")," inline tag is used to label a declaration, so that it can be referenced using a selector in\nthe TSDoc declaration reference notation."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Note: The ",(0,l.kt)("inlineCode",{parentName:"p"},"{@label}")," notation has not been finalized. See GitHub\n",(0,l.kt)("a",{parentName:"p",href:"https://github.com/microsoft/tsdoc/issues/9"},"issue #9"))),(0,l.kt)("h2",{id:"example"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"export interface Interface {\n  /**\n   * Shortest name:  {@link InterfaceL1.(:STRING_INDEXER)}\n   * Full name:      {@link (InterfaceL1:interface).(:STRING_INDEXER)}\n   *\n   * {@label STRING_INDEXER}\n   */\n  [key: string]: number;\n\n  /**\n   * Shortest name:  {@link InterfaceL1.(:NUMBER_INDEXER)}\n   * Full name:      {@link (InterfaceL1:interface).(:NUMBER_INDEXER)}\n   *\n   * {@label NUMBER_INDEXER}\n   */\n  [key: number]: number;\n\n  /**\n   * Shortest name:  {@link InterfaceL1.(:FUNCTOR)}\n   * Full name:      {@link (InterfaceL1:interface).(:FUNCTOR)}\n   *\n   * {@label FUNCTOR}\n   */\n  (source: string, subString: string): boolean;\n\n  /**\n   * Shortest name:  {@link InterfaceL1.(:CONSTRUCTOR)}\n   * Full name:      {@link (InterfaceL1:interface).(:CONSTRUCTOR)}\n   *\n   * {@label CONSTRUCTOR}\n   */\n  new (hour: number, minute: number);\n}\n")))}b.isMDXComponent=!0}}]);