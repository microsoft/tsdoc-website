"use strict";(self.webpackChunktsdoc_org=self.webpackChunktsdoc_org||[]).push([[3813],{158:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>g});var n=r(6393);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),p=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(i.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,s=e.originalType,i=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(r),d=a,g=c["".concat(i,".").concat(d)]||c[d]||m[d]||s;return r?n.createElement(g,o(o({ref:t},u),{},{components:r})):n.createElement(g,o({ref:t},u))}));function g(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=r.length,o=new Array(s);o[0]=d;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[c]="string"==typeof e?e:a,o[1]=l;for(var p=2;p<s;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},8300:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>g,frontMatter:()=>l,metadata:()=>p,toc:()=>c});var n=r(9122),a=r(2501),s=(r(6393),r(158)),o=["components"],l={title:"@returns"},i=void 0,p={unversionedId:"pages/tags/returns",id:"pages/tags/returns",title:"@returns",description:"|    |    |",source:"@site/docs/pages/tags/returns.md",sourceDirName:"pages/tags",slug:"/pages/tags/returns",permalink:"/pages/tags/returns",draft:!1,editUrl:"https://github.com/microsoft/rushstack-websites/tree/main/websites/tsdoc.org/docs/pages/tags/returns.md",tags:[],version:"current",frontMatter:{title:"@returns"},sidebar:"docsSidebar",previous:{title:"@remarks",permalink:"/pages/tags/remarks"},next:{title:"@sealed",permalink:"/pages/tags/sealed"}},u={},c=[{value:"Usage",id:"usage",level:2},{value:"Example",id:"example",level:2},{value:"See also",id:"see-also",level:2}],m={toc:c},d="wrapper";function g(e){var t=e.components,r=(0,a.Z)(e,o);return(0,s.kt)(d,(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("table",null,(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"Standardization:"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"td",href:"/pages/spec/standardization_groups"},"Core"))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"Syntax kind:"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"td",href:"/pages/spec/tag_kinds"},"Block tag"))))),(0,s.kt)("h2",{id:"usage"},"Usage"),(0,s.kt)("p",null,"Used to document the return value for a function."),(0,s.kt)("h2",{id:"example"},"Example"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"/**\n * Returns the average of two numbers.\n *\n * @remarks\n * This method is part of the {@link core-library#Statistics | Statistics subsystem}.\n *\n * @param x - The first input number\n * @param y - The second input number\n * @returns The arithmetic mean of `x` and `y`\n *\n * @beta\n */\nfunction getAverage(x: number, y: number): number {\n  return (x + y) / 2.0;\n}\n")),(0,s.kt)("h2",{id:"see-also"},"See also"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/pages/tags/param"},"@param")," tag")))}g.isMDXComponent=!0}}]);