"use strict";(self.webpackChunktsdoc_org=self.webpackChunktsdoc_org||[]).push([[1896],{158:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>g});var n=r(6393);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),p=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(i.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(r),m=a,g=u["".concat(i,".").concat(m)]||u[m]||d[m]||o;return r?n.createElement(g,s(s({ref:t},c),{},{components:r})):n.createElement(g,s({ref:t},c))}));function g(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,s=new Array(o);s[0]=m;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[u]="string"==typeof e?e:a,s[1]=l;for(var p=2;p<o;p++)s[p]=r[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},6630:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>g,frontMatter:()=>l,metadata:()=>p,toc:()=>u});var n=r(9122),a=r(2501),o=(r(6393),r(158)),s=["components"],l={title:"@see"},i=void 0,p={unversionedId:"pages/tags/see",id:"pages/tags/see",title:"@see",description:"|    |    |",source:"@site/docs/pages/tags/see.md",sourceDirName:"pages/tags",slug:"/pages/tags/see",permalink:"/pages/tags/see",draft:!1,editUrl:"https://github.com/microsoft/rushstack-websites/tree/main/websites/tsdoc.org/docs/pages/tags/see.md",tags:[],version:"current",frontMatter:{title:"@see"},sidebar:"docsSidebar",previous:{title:"@sealed",permalink:"/pages/tags/sealed"},next:{title:"@throws",permalink:"/pages/tags/throws"}},c={},u=[{value:"Usage",id:"usage",level:2},{value:"Example",id:"example",level:2},{value:"See also",id:"see-also",level:2}],d={toc:u},m="wrapper";function g(e){var t=e.components,r=(0,a.Z)(e,s);return(0,o.kt)(m,(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("table",null,(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Standardization:"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/pages/spec/standardization_groups"},"Extended"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Syntax kind:"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/pages/spec/tag_kinds"},"Block tag"))))),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("p",null,"Used to build a list of references to an API item or other resource that may be related to the\ncurrent item."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Note: JSDoc attempts to automatically hyperlink the text immediately after ",(0,o.kt)("inlineCode",{parentName:"p"},"@see"),". Because this is ambiguous\nwith plain text, TSDoc instead requires an explicit ",(0,o.kt)("inlineCode",{parentName:"p"},"{@link}")," tag to make hyperlinks.")),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"/**\n * Parses a string containing a Uniform Resource Locator (URL).\n * @see {@link ParsedUrl} for the returned data structure\n * @see {@link https://tools.ietf.org/html/rfc1738|RFC 1738}\n * for syntax\n * @see your developer SDK for code samples\n * @param url - the string to be parsed\n * @returns the parsed result\n */\nfunction parseURL(url: string): ParsedUrl;\n")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"@see")," is a block tag. Each block becomes an item in the list of references. For example, a documentation\nsystem might render the above blocks as follows:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-markdown"},"`function parseURL(url: string): ParsedUrl;`\n\nParses a string containing a Uniform Resource Locator (URL).\n\n## See Also\n\n- ParsedUrl for the returned data structure\n- RFC 1738 for syntax\n- your developer SDK for code samples\n")),(0,o.kt)("h2",{id:"see-also"},"See also"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/microsoft/tsdoc/issues/235"},"RFC #235"),":\n",(0,o.kt)("inlineCode",{parentName:"li"},"@see"),' block tag specifies an item for a "See Also" section')))}g.isMDXComponent=!0}}]);