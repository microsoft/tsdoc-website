"use strict";(self.webpackChunktsdoc_org=self.webpackChunktsdoc_org||[]).push([[648],{158:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>g});var n=r(6393);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},d=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=p(r),m=a,g=c["".concat(s,".").concat(m)]||c[m]||u[m]||i;return r?n.createElement(g,o(o({ref:t},d),{},{components:r})):n.createElement(g,o({ref:t},d))}));function g(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},1584:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>g,frontMatter:()=>l,metadata:()=>p,toc:()=>c});var n=r(9122),a=r(2501),i=(r(6393),r(158)),o=["components"],l={title:"@override"},s=void 0,p={unversionedId:"pages/tags/override",id:"pages/tags/override",title:"@override",description:"|    |    |",source:"@site/docs/pages/tags/override.md",sourceDirName:"pages/tags",slug:"/pages/tags/override",permalink:"/pages/tags/override",draft:!1,editUrl:"https://github.com/microsoft/rushstack-websites/tree/main/websites/tsdoc.org/docs/pages/tags/override.md",tags:[],version:"current",frontMatter:{title:"@override"},sidebar:"docsSidebar",previous:{title:"@link",permalink:"/pages/tags/link"},next:{title:"@packageDocumentation",permalink:"/pages/tags/packagedocumentation"}},d={},c=[{value:"Usage",id:"usage",level:2},{value:"Example",id:"example",level:2},{value:"See also",id:"see-also",level:2}],u={toc:c},m="wrapper";function g(e){var t=e.components,r=(0,a.Z)(e,o);return(0,i.kt)(m,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("table",null,(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Standardization:"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/pages/spec/standardization_groups"},"Extended"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Syntax kind:"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/pages/spec/tag_kinds"},"Modifier"))))),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)("p",null,"This modifier has similar semantics to the ",(0,i.kt)("inlineCode",{parentName:"p"},"override")," keyword in C# or Java. For a member function or property,\nexplicitly indicates that this definition is overriding (i.e. redefining) the definition inherited from the\nbase class. The base class definition would normally be marked as ",(0,i.kt)("inlineCode",{parentName:"p"},"virtual"),"."),(0,i.kt)("p",null,"A documentation tool may enforce that the ",(0,i.kt)("inlineCode",{parentName:"p"},"@virtual"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"@override"),", and/or ",(0,i.kt)("inlineCode",{parentName:"p"},"@sealed")," modifiers are consistently\napplied, but this is not required by the TSDoc standard."),(0,i.kt)("h2",{id:"example"},"Example"),(0,i.kt)("p",null,"In the code sample below, ",(0,i.kt)("inlineCode",{parentName:"p"},"Child.render()")," overrides the virtual member ",(0,i.kt)("inlineCode",{parentName:"p"},"Base.render()"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"class Base {\n  /** @virtual */\n  public render(): void {}\n\n  /** @sealed */\n  public initialize(): void {}\n}\n\nclass Child extends Base {\n  /** @override */\n  public render(): void;\n}\n")),(0,i.kt)("h2",{id:"see-also"},"See also"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/pages/tags/sealed"},"@sealed")," tag"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/pages/tags/virtual"},"@virtual")," tag"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/override"},"C# reference: override"),":\nan equivalent feature from another programming language")))}g.isMDXComponent=!0}}]);